/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <3 3>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   -   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // | SHIFT |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | LCTRL |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | GUI |  ALT  |LOWER | ENTER  |  | SPACE | RAISE |   [  |   ]   | 

            bindings = <
&kp ESC         &kp N1  &kp N2  &kp N3    &kp N4            &kp N5                                    &kp N6        &kp N7    &kp N8     &kp N9   &kp N0    &kp MINUS
&kp TAB         &kp Q   &kp W   &kp E     &kp R             &kp T                                     &kp Y         &kp U     &kp I      &kp O    &kp P     &kp EQUAL
&kp LCTRL       &kp A   &kp S   &kp D     &kp F             &kp G                                     &kp H         &kp J     &kp K      &kp L    &kp SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z   &kp X   &kp C     &kp V             &kp B            &kp C_MUTE    &kp INS    &kp N         &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp BACKSLASH
                        &none   &kp LALT  &kp LEFT_COMMAND  &lt 1 BACKSPACE  &kp SPACE     &kp ENTER  &lt 2 DELETE  &kp LBKT  &kp RBKT   &none
            >;

            sensor-bindings = <&inc_dec_kp RIGHT LEFT>, <&inc_dec_kp DOWN UP>;
        };

        // ------------------------------------------------------------------------------------------------------------
        // |BTCLR | BT1   | BT2   |  BT3  |  BT4  |  BT5  |                |      |      |       |      |       |       |
        // |      |       |       |       |       |       |                |      |      |       |      |       |       |
        // |      |       |       |       |       |       |                |      |      |       |      |       |       |
        // |      |       |       |       |       |       |       | |      |      |      |       |      |       |       |
        //                |       |       |       |       |       | |      |      |      |       |      |

        layer_1 {
            bindings = <
&kp TILDE  &none  &none         &none     &none          &none                          &none  &none         &none         &none         &none  &none
&kp GRAVE  &none  &kp LA(LEFT)  &kp UP    &kp LA(RIGHT)  &kp PAGE_UP                    &none  &kp N7        &kp N8        &kp N9        &none  &none
&none      &none  &kp LEFT      &kp DOWN  &kp RIGHT      &kp PAGE_DOWN                  &none  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &none  &none
&none      &none  &none         &none     &none          &none          &none    &none  &none  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none  &none
                  &none         &kp LALT  &kp LGUI       &none          &none    &none  &none  &none         &kp N0        &none
            >;
        };

        layer_2 {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans                          &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans                          &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                          &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
